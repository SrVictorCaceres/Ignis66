/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Ignis66.vistas;

import Ignis66.acessoADatos.BomberoData;
import Ignis66.acessoADatos.Conexion;
import Ignis66.entidades.Bombero;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.ZoneId;
import java.util.Date;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.KeyStroke;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author fdicocco
 */
public class ModificarBombero extends javax.swing.JFrame {
    Bombero b = new Bombero();
    int idComparador; 
    
      private DefaultTableModel modelo = new DefaultTableModel(){
                @Override
        public boolean isCellEditable(int f, int c) {
            return false;
        };
        
        
};
    /**
     * Creates new form PruebaModificarBombero
     */
    public ModificarBombero() {
               
        initComponents();
        modelarTabla();
        cargarTabla();
        validacion();
        disableCopyPaste(jtfNombre);
        disableCopyPaste(jtfDni);
        disableCopyPaste(jtfFijo2);
        disableCopyPaste(jtfCelular);
        disableCopyPaste(jtfCorreo2);
        disableCopyPaste(jtfBuscarNombre);
        disableCopyPaste(jdcFechaNac);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel27 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jtfBuscarNombre = new javax.swing.JTextField();
        jtfCelular = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jtfNombre = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel26 = new javax.swing.JLabel();
        jtfIdBombero = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jtfDni = new javax.swing.JTextField();
        jdcFechaNac = new com.toedter.calendar.JDateChooser();
        jcbSexo = new javax.swing.JComboBox<>();
        jcbEstado = new javax.swing.JComboBox<>();
        jcbSangre = new javax.swing.JComboBox<>();
        jcbTipo = new javax.swing.JComboBox<>();
        jtfFijo2 = new javax.swing.JTextField();
        jbSalir = new javax.swing.JButton();
        jbLimpiar = new javax.swing.JButton();
        jbActualizar = new javax.swing.JButton();
        jcbRango = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jlErrorNombre = new javax.swing.JLabel();
        jlErrorDni = new javax.swing.JLabel();
        jlErrorSexo = new javax.swing.JLabel();
        jlErrorFecha = new javax.swing.JLabel();
        jlErrorSangre = new javax.swing.JLabel();
        jlErrorCelular = new javax.swing.JLabel();
        jlErrorTipo = new javax.swing.JLabel();
        jlErrorRango = new javax.swing.JLabel();
        jlErrorEstado = new javax.swing.JLabel();
        jlErrorCorreo = new javax.swing.JLabel();
        jlErrorFijo = new javax.swing.JLabel();
        jrbCorreoNo = new javax.swing.JRadioButton();
        jrbCorreoSi = new javax.swing.JRadioButton();
        jrbFijoNo = new javax.swing.JRadioButton();
        jrbFijoSi = new javax.swing.JRadioButton();
        jLabel29 = new javax.swing.JLabel();
        jtfCorreo2 = new javax.swing.JTextField();
        jcbEspecialidad = new javax.swing.JComboBox<>();
        jlErrorEspecialidad = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();

        jLabel27.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        jLabel27.setText("(*) Campos obligatorios");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(null);

        jPanel1.setBackground(new java.awt.Color(204, 0, 0));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("ACTUALIZACION DE DATOS");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10)
                .addContainerGap(461, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 0, 669, 0);

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel13.setText("Introduza el nombre y/o apellido:");
        getContentPane().add(jLabel13);
        jLabel13.setBounds(331, 91, 152, 13);

        jtfBuscarNombre.setBorder(null);
        jtfBuscarNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtfBuscarNombreKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtfBuscarNombreKeyTyped(evt);
            }
        });
        getContentPane().add(jtfBuscarNombre);
        jtfBuscarNombre.setBounds(331, 106, 292, 25);

        jtfCelular.setBorder(null);
        jtfCelular.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtfCelularKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtfCelularKeyTyped(evt);
            }
        });
        getContentPane().add(jtfCelular);
        jtfCelular.setBounds(40, 363, 210, 22);

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel7.setText("Sexo *");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(40, 222, 31, 13);

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel6.setText("Correo Electrónico");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(331, 396, 85, 13);

        jLabel21.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel21.setText("Teléfono Fijo (Cód. de Área + Nro Tel)");
        getContentPane().add(jLabel21);
        jLabel21.setBounds(331, 440, 176, 13);
        getContentPane().add(jLabel24);
        jLabel24.setBounds(250, 170, 0, 0);

        jtfNombre.setBorder(null);
        jtfNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtfNombreKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtfNombreKeyTyped(evt);
            }
        });
        getContentPane().add(jtfNombre);
        jtfNombre.setBounds(40, 151, 210, 22);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel1.setText("Nombre Completo *");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(40, 137, 91, 13);

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel17.setText("Grupo Sanguíneo *");
        getContentPane().add(jLabel17);
        jLabel17.setBounds(40, 307, 89, 13);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel3.setText("DNI *");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(40, 181, 27, 13);

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel4.setText("Fecha de Nacimiento *");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(40, 265, 102, 12);

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel5.setText("Celular (sin 0 ni 15) *");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(40, 350, 95, 13);

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel16.setText("Tipo de Bombero *");
        getContentPane().add(jLabel16);
        jLabel16.setBounds(40, 401, 87, 13);

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel18.setText("Rango *");
        getContentPane().add(jLabel18);
        jLabel18.setBounds(40, 444, 38, 12);

        jLabel25.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel25.setText("Estado *");
        getContentPane().add(jLabel25);
        jLabel25.setBounds(331, 353, 39, 13);

        jTable1.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "NOMBRE Y APELLIDO", "DNI"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTable1.getTableHeader().setReorderingAllowed(false);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(50);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(150);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(100);
        }

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(331, 137, 292, 149);

        jLabel26.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel26.setText("ID del Bombero");
        getContentPane().add(jLabel26);
        jLabel26.setBounds(40, 103, 71, 13);

        jtfIdBombero.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jtfIdBombero.setText("-");
        getContentPane().add(jtfIdBombero);
        jtfIdBombero.setBounds(40, 116, 14, 17);

        jLabel28.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(102, 102, 102));
        jLabel28.setText("* Campos obligatorios");
        getContentPane().add(jLabel28);
        jLabel28.setBounds(523, 60, 100, 13);

        jtfDni.setBorder(null);
        jtfDni.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtfDniKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtfDniKeyTyped(evt);
            }
        });
        getContentPane().add(jtfDni);
        jtfDni.setBounds(40, 194, 210, 22);

        jdcFechaNac.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jdcFechaNacMouseClicked(evt);
            }
        });
        getContentPane().add(jdcFechaNac);
        jdcFechaNac.setBounds(40, 277, 210, 24);

        jcbSexo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Femenino", "Masculino", "Otro" }));
        jcbSexo.setBorder(null);
        jcbSexo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jcbSexoMouseClicked(evt);
            }
        });
        getContentPane().add(jcbSexo);
        jcbSexo.setBounds(40, 235, 210, 24);

        jcbEstado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ACTIVO", "INACTIVO" }));
        jcbEstado.setBorder(null);
        jcbEstado.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jcbEstadoMouseClicked(evt);
            }
        });
        getContentPane().add(jcbEstado);
        jcbEstado.setBounds(331, 366, 235, 24);

        jcbSangre.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "A+", "A-", "B+", "B-", "AB+", "AB-", "O+", "O-" }));
        jcbSangre.setBorder(null);
        jcbSangre.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jcbSangreMouseClicked(evt);
            }
        });
        getContentPane().add(jcbSangre);
        jcbSangre.setBounds(40, 320, 210, 24);

        jcbTipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Voluntario", "Zapador" }));
        jcbTipo.setBorder(null);
        jcbTipo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jcbTipoMouseClicked(evt);
            }
        });
        getContentPane().add(jcbTipo);
        jcbTipo.setBounds(40, 414, 210, 24);

        jtfFijo2.setBorder(null);
        jtfFijo2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtfFijo2KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtfFijo2KeyTyped(evt);
            }
        });
        getContentPane().add(jtfFijo2);
        jtfFijo2.setBounds(430, 453, 145, 24);

        jbSalir.setBackground(new java.awt.Color(255, 51, 51));
        jbSalir.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jbSalir.setText("Salir");
        jbSalir.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.blue, java.awt.Color.white));
        jbSalir.setBorderPainted(false);
        jbSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalirActionPerformed(evt);
            }
        });
        getContentPane().add(jbSalir);
        jbSalir.setBounds(523, 510, 100, 31);

        jbLimpiar.setBackground(new java.awt.Color(255, 255, 102));
        jbLimpiar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jbLimpiar.setText("Limpiar Campos");
        jbLimpiar.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.blue, java.awt.Color.white));
        jbLimpiar.setBorderPainted(false);
        jbLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbLimpiarActionPerformed(evt);
            }
        });
        getContentPane().add(jbLimpiar);
        jbLimpiar.setBounds(386, 510, 119, 31);

        jbActualizar.setBackground(new java.awt.Color(153, 255, 51));
        jbActualizar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jbActualizar.setText("Actualizar");
        jbActualizar.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.blue, java.awt.Color.white));
        jbActualizar.setBorderPainted(false);
        jbActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbActualizarActionPerformed(evt);
            }
        });
        getContentPane().add(jbActualizar);
        jbActualizar.setBounds(40, 510, 210, 31);

        jcbRango.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "BOMBERO", "CABO", "CABO PRIMERO", "SARGENTO", "SARGENTO 1°", "SUBOFICIAL PRINCIPAL", "SUBOFICIAL MAYOR", "OFICIAL AYUDANTE", "OFICIAL INSPECTOR", "OFICIAL PRINCIPAL", "SUBCOMANDANTE", "COMANDANTE", "COMANDANTE MAYOR", "COMANDANTE GENERAL" }));
        jcbRango.setBorder(null);
        jcbRango.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jcbRangoMouseClicked(evt);
            }
        });
        getContentPane().add(jcbRango);
        jcbRango.setBounds(40, 456, 210, 24);

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel12.setText("Seleccione de la tabla el bombero cuyos datos desea actualizar:");
        getContentPane().add(jLabel12);
        jLabel12.setBounds(40, 60, 387, 15);
        getContentPane().add(jSeparator3);
        jSeparator3.setBounds(40, 75, 583, 10);

        jlErrorNombre.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jlErrorNombre.setForeground(new java.awt.Color(255, 0, 0));
        jlErrorNombre.setText("!");
        getContentPane().add(jlErrorNombre);
        jlErrorNombre.setBounds(254, 151, 5, 24);

        jlErrorDni.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jlErrorDni.setForeground(new java.awt.Color(255, 0, 0));
        jlErrorDni.setText("!");
        getContentPane().add(jlErrorDni);
        jlErrorDni.setBounds(254, 194, 5, 22);

        jlErrorSexo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jlErrorSexo.setForeground(new java.awt.Color(255, 0, 0));
        jlErrorSexo.setText("!");
        getContentPane().add(jlErrorSexo);
        jlErrorSexo.setBounds(254, 237, 5, 17);

        jlErrorFecha.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jlErrorFecha.setForeground(new java.awt.Color(255, 0, 0));
        jlErrorFecha.setText("!");
        getContentPane().add(jlErrorFecha);
        jlErrorFecha.setBounds(254, 277, 5, 24);

        jlErrorSangre.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jlErrorSangre.setForeground(new java.awt.Color(255, 0, 0));
        jlErrorSangre.setText("!");
        getContentPane().add(jlErrorSangre);
        jlErrorSangre.setBounds(254, 320, 5, 24);

        jlErrorCelular.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jlErrorCelular.setForeground(new java.awt.Color(255, 0, 0));
        jlErrorCelular.setText("!");
        getContentPane().add(jlErrorCelular);
        jlErrorCelular.setBounds(254, 363, 5, 17);

        jlErrorTipo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jlErrorTipo.setForeground(new java.awt.Color(255, 0, 0));
        jlErrorTipo.setText("!");
        getContentPane().add(jlErrorTipo);
        jlErrorTipo.setBounds(254, 416, 5, 17);

        jlErrorRango.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jlErrorRango.setForeground(new java.awt.Color(255, 0, 0));
        jlErrorRango.setText("!");
        getContentPane().add(jlErrorRango);
        jlErrorRango.setBounds(254, 458, 5, 17);

        jlErrorEstado.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jlErrorEstado.setForeground(new java.awt.Color(255, 0, 0));
        jlErrorEstado.setText("!");
        getContentPane().add(jlErrorEstado);
        jlErrorEstado.setBounds(570, 366, 5, 17);

        jlErrorCorreo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jlErrorCorreo.setForeground(new java.awt.Color(255, 0, 0));
        jlErrorCorreo.setText("!");
        getContentPane().add(jlErrorCorreo);
        jlErrorCorreo.setBounds(581, 411, 5, 17);

        jlErrorFijo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jlErrorFijo.setForeground(new java.awt.Color(255, 0, 0));
        jlErrorFijo.setText("!");
        getContentPane().add(jlErrorFijo);
        jlErrorFijo.setBounds(581, 455, 5, 17);

        jrbCorreoNo.setText("No");
        jrbCorreoNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbCorreoNoActionPerformed(evt);
            }
        });
        getContentPane().add(jrbCorreoNo);
        jrbCorreoNo.setBounds(331, 410, 47, 28);

        jrbCorreoSi.setText("Si");
        jrbCorreoSi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbCorreoSiActionPerformed(evt);
            }
        });
        getContentPane().add(jrbCorreoSi);
        jrbCorreoSi.setBounds(370, 410, 43, 28);

        jrbFijoNo.setText("No");
        jrbFijoNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbFijoNoActionPerformed(evt);
            }
        });
        getContentPane().add(jrbFijoNo);
        jrbFijoNo.setBounds(340, 454, 47, 28);

        jrbFijoSi.setText("Si");
        jrbFijoSi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbFijoSiActionPerformed(evt);
            }
        });
        getContentPane().add(jrbFijoSi);
        jrbFijoSi.setBounds(379, 454, 43, 28);

        jLabel29.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel29.setText("0");
        getContentPane().add(jLabel29);
        jLabel29.setBounds(420, 459, 5, 13);

        jtfCorreo2.setBorder(null);
        jtfCorreo2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtfCorreo2KeyReleased(evt);
            }
        });
        getContentPane().add(jtfCorreo2);
        jtfCorreo2.setBounds(409, 410, 166, 24);

        jcbEspecialidad.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "INCENDIO", "RESCATE", "MAT. PELIGROSOS", "INC. FORESTALES", "ACUATICA", "CANINA ", "MONTAÑA", "BUCEO" }));
        jcbEspecialidad.setBorder(null);
        jcbEspecialidad.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jcbEspecialidadMouseClicked(evt);
            }
        });
        getContentPane().add(jcbEspecialidad);
        jcbEspecialidad.setBounds(331, 319, 232, 24);

        jlErrorEspecialidad.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jlErrorEspecialidad.setForeground(new java.awt.Color(255, 0, 0));
        jlErrorEspecialidad.setText("!");
        getContentPane().add(jlErrorEspecialidad);
        jlErrorEspecialidad.setBounds(567, 317, 5, 24);

        jLabel30.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel30.setText("Especialidad *");
        getContentPane().add(jLabel30);
        jLabel30.setBounds(331, 304, 63, 13);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void jtfBuscarNombreKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfBuscarNombreKeyReleased
 buscarNombre(jtfBuscarNombre.getText());
        
    }//GEN-LAST:event_jtfBuscarNombreKeyReleased

    private void jtfCelularKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfCelularKeyTyped
        int key = evt.getKeyChar();

        boolean numeros = key >= 48 && key <= 57;

        if (!numeros)
        {
            evt.consume();
        }

        if (jtfCelular.getText().trim().length() == 10) {
            evt.consume();
        }
    }//GEN-LAST:event_jtfCelularKeyTyped

    private void jtfNombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfNombreKeyTyped
        char c = evt.getKeyChar();
        if ((c < 'a' || c > 'z') && (c < 'A' || c > 'Z') && (c != 32)&& (c!='\u00f1')&&(c!='\u00d1')) {
            evt.consume();
        }

        if (jtfNombre.getText().length() >= 40) {
            evt.consume();
        }
    }//GEN-LAST:event_jtfNombreKeyTyped

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
         int seleccion = jTable1.getSelectedRow();
         
         BomberoData bdata = new BomberoData();
         String idBomb = jTable1.getValueAt(seleccion, 0).toString();
         idComparador = Integer.parseInt(idBomb);
         
         b = bdata.traerDatos(idComparador);
         
         jtfIdBombero.setText(idComparador+"");
         jtfNombre.setText(b.getNombreCompleto());
         jtfDni.setText(String.valueOf(b.getDni()));
         jtfCelular.setText(Long.toString(b.getCelular())); 
         jtfFijo2.setText(b.getFijo());
         jtfCorreo2.setText(b.getCorreo());
         jcbEstado.setSelectedItem(b.getEstado());
         jcbEspecialidad.setSelectedItem(b.getEspecialidad());
         jcbSexo.setSelectedItem(b.getSexo());
         jdcFechaNac.setDate(Date.from(b.getFechaNacimiento().atStartOfDay(ZoneId.systemDefault()).toInstant()));
         jcbSangre.setSelectedItem(b.getGrupoSanguineo());
         jcbTipo.setSelectedItem(b.getTipo());
         jcbRango.setSelectedItem(b.getRango());
         
         if(b.getCorreo()==null){
             jrbCorreoNo.setSelected(true);
             jrbCorreoSi.setSelected(false);
             jtfCorreo2.setEnabled(false);
          } else{
             jrbCorreoNo.setSelected(false);  
             jrbCorreoSi.setSelected(true);
              jtfCorreo2.setEnabled(true);
         }
         
         if(b.getFijo()==null){
             jrbFijoNo.setSelected(true);
             jrbFijoSi.setSelected(false);
              jtfFijo2.setEnabled(false);
          } else{
             jrbFijoNo.setSelected(false);  
             jrbFijoSi.setSelected(true);
             jtfFijo2.setEnabled(true);
         }
         
        
         validacion();
         chequearModificacion();
         
         
    }//GEN-LAST:event_jTable1MouseClicked

    private void jtfDniKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfDniKeyTyped
           int key = evt.getKeyChar();
        boolean num = key >= 48 && key <= 57;
         if (!num) {
            evt.consume();}
         if(jtfDni.getText().length() >= 8){
             evt.consume();
        }    
    }//GEN-LAST:event_jtfDniKeyTyped

    private void jtfBuscarNombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfBuscarNombreKeyTyped
        char c = evt.getKeyChar();
        if ((c < 'a' || c > 'z') && (c < 'A' || c > 'Z') && (c != 32)&& (c!='\u00f1')&&(c!='\u00d1')) {
            evt.consume();
        }

        if (jtfBuscarNombre.getText().length() >= 40) {
            evt.consume();
        }
    }//GEN-LAST:event_jtfBuscarNombreKeyTyped

    private void jtfFijo2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfFijo2KeyTyped
        int key = evt.getKeyChar();

        boolean numeros = key >= 48 && key <= 57;

        if (!numeros)
        {
            evt.consume();
        }

        if (jtfFijo2.getText().trim().length() == 10) {
            evt.consume();
        }
    }//GEN-LAST:event_jtfFijo2KeyTyped

    private void jbSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalirActionPerformed
        dispose();
    }//GEN-LAST:event_jbSalirActionPerformed

    private void jbLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbLimpiarActionPerformed
        limpiarCampos();
        
    }//GEN-LAST:event_jbLimpiarActionPerformed

    private void jbActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbActualizarActionPerformed
        
         BomberoData bdata = new BomberoData();    
         Bombero bm = new Bombero(); 
        
         try{
         bm.setEstado((String)jcbEstado.getSelectedItem());
         bm.setNombreCompleto(jtfNombre.getText());
         bm.setDni(Integer.parseInt(jtfDni.getText()));
         bm.setCelular(Long.parseLong(jtfCelular.getText())); 
         
         if (jrbFijoSi.isSelected())
             bm.setFijo(jtfFijo2.getText());
         else
             bm.setFijo(null);
         
         if (jrbCorreoSi.isSelected())
             bm.setCorreo(jtfCorreo2.getText());
         else
             bm.setCorreo(null);
         
         bm.setSexo((String) jcbSexo.getSelectedItem());
         bm.setFechaNacimiento(jdcFechaNac.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate());
         bm.setGrupoSanguineo((String) jcbSangre.getSelectedItem());
         bm.setTipo((String) jcbTipo.getSelectedItem());
         bm.setEspecialidad((String) jcbEspecialidad.getSelectedItem());
         bm.setRango((String) jcbRango.getSelectedItem());
         
         bdata.modificarDatosBombero(bm, Integer.parseInt(jtfIdBombero.getText()));
     
         limpiarCampos();
         limpiarTabla();
         cargarTabla();
         }
        catch(NumberFormatException nx){
           JOptionPane.showMessageDialog(this, "Error al intentar carga el número de celular. Intente nuevamente.");}
    }//GEN-LAST:event_jbActualizarActionPerformed

    private void jrbCorreoNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbCorreoNoActionPerformed
         jrbCorreoSi.setSelected(false);
         jtfCorreo2.setEnabled(false);
       
        
        validacion();
        chequearModificacion();
    }//GEN-LAST:event_jrbCorreoNoActionPerformed

    private void jrbCorreoSiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbCorreoSiActionPerformed
         jrbCorreoNo.setSelected(false);
         jtfCorreo2.setEnabled(true);
        
       
       validacion();
        chequearModificacion();
    }//GEN-LAST:event_jrbCorreoSiActionPerformed

    private void jrbFijoSiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbFijoSiActionPerformed
        jrbFijoNo.setSelected(false);
        jtfFijo2.setEnabled(true);
        
     validacion();
      chequearModificacion();
    }//GEN-LAST:event_jrbFijoSiActionPerformed

    private void jtfNombreKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfNombreKeyReleased
              validacion();
       chequearModificacion();
      
                
    }//GEN-LAST:event_jtfNombreKeyReleased

    private void jtfDniKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfDniKeyReleased
      validacion();
       chequearModificacion();
      
    }//GEN-LAST:event_jtfDniKeyReleased

    private void jtfCelularKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfCelularKeyReleased
         
    validacion();
       chequearModificacion();
      
    }//GEN-LAST:event_jtfCelularKeyReleased

    private void jtfFijo2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfFijo2KeyReleased
        
     validacion();
       chequearModificacion();
       
    }//GEN-LAST:event_jtfFijo2KeyReleased

    private void jtfCorreo2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfCorreo2KeyReleased
      
       validacion();
       chequearModificacion();
      
    }//GEN-LAST:event_jtfCorreo2KeyReleased

    private void jcbEspecialidadMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jcbEspecialidadMouseClicked
        
    validacion();
       chequearModificacion();

    }//GEN-LAST:event_jcbEspecialidadMouseClicked

    private void jcbSexoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jcbSexoMouseClicked
     validacion();
       chequearModificacion();
      
    }//GEN-LAST:event_jcbSexoMouseClicked

    private void jdcFechaNacMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jdcFechaNacMouseClicked
    validacion();
       chequearModificacion();
  
    }//GEN-LAST:event_jdcFechaNacMouseClicked

    private void jcbSangreMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jcbSangreMouseClicked
         
     
       validacion();
       chequearModificacion();
   
    }//GEN-LAST:event_jcbSangreMouseClicked

    private void jcbTipoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jcbTipoMouseClicked
         
validacion();
       chequearModificacion();
       
    }//GEN-LAST:event_jcbTipoMouseClicked

    private void jcbRangoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jcbRangoMouseClicked
        validacion();
       chequearModificacion();
      
    }//GEN-LAST:event_jcbRangoMouseClicked

    private void jcbEstadoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jcbEstadoMouseClicked
      
validacion();
       chequearModificacion();
      
         
    }//GEN-LAST:event_jcbEstadoMouseClicked

    private void jrbFijoNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbFijoNoActionPerformed
        jrbFijoSi.setSelected(false);
         jtfFijo2.setEnabled(false);
       validacion();
       chequearModificacion();
       validacion();
    }//GEN-LAST:event_jrbFijoNoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
     java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new ModificarBombero().setVisible(true);
            }
        });
    
        
        
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ModificarBombero.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ModificarBombero.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ModificarBombero.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ModificarBombero.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton jbActualizar;
    private javax.swing.JButton jbLimpiar;
    private javax.swing.JButton jbSalir;
    private javax.swing.JComboBox<String> jcbEspecialidad;
    private javax.swing.JComboBox<String> jcbEstado;
    private javax.swing.JComboBox<String> jcbRango;
    private javax.swing.JComboBox<String> jcbSangre;
    private javax.swing.JComboBox<String> jcbSexo;
    private javax.swing.JComboBox<String> jcbTipo;
    private com.toedter.calendar.JDateChooser jdcFechaNac;
    private javax.swing.JLabel jlErrorCelular;
    private javax.swing.JLabel jlErrorCorreo;
    private javax.swing.JLabel jlErrorDni;
    private javax.swing.JLabel jlErrorEspecialidad;
    private javax.swing.JLabel jlErrorEstado;
    private javax.swing.JLabel jlErrorFecha;
    private javax.swing.JLabel jlErrorFijo;
    private javax.swing.JLabel jlErrorNombre;
    private javax.swing.JLabel jlErrorRango;
    private javax.swing.JLabel jlErrorSangre;
    private javax.swing.JLabel jlErrorSexo;
    private javax.swing.JLabel jlErrorTipo;
    private javax.swing.JRadioButton jrbCorreoNo;
    private javax.swing.JRadioButton jrbCorreoSi;
    private javax.swing.JRadioButton jrbFijoNo;
    private javax.swing.JRadioButton jrbFijoSi;
    private javax.swing.JTextField jtfBuscarNombre;
    private javax.swing.JTextField jtfCelular;
    private javax.swing.JTextField jtfCorreo2;
    private javax.swing.JTextField jtfDni;
    private javax.swing.JTextField jtfFijo2;
    private javax.swing.JLabel jtfIdBombero;
    private javax.swing.JTextField jtfNombre;
    // End of variables declaration//GEN-END:variables

public void buscarNombre(String nombreBuscado){
    String sql = "SELECT idBombero, nombreCompleto, dni FROM bomberos WHERE nombreCompleto LIKE '%" + nombreBuscado + "%'";
    limpiarTabla();
    try{
        PreparedStatement ps = Conexion.getConexion().prepareStatement(sql);
        ResultSet rs = ps.executeQuery();
        while (rs.next()) {
            modelo.addRow(new Object[]{rs.getString(1),rs.getString(2),rs.getString(3)});
            }
            rs.close();
            ps.close();
        }catch(SQLException sqle){
            JOptionPane.showMessageDialog(null, "Error en la carga de datos " + sqle.getMessage());
        }
}    
        
public void cargarTabla(){
    limpiarCampos();
     BomberoData bdata = new BomberoData();    
    for ( Bombero bomb : bdata.listarBomberos())
          modelo.addRow(new Object[]{bomb.getIdBombero(),bomb.getNombreCompleto(),bomb.getDni()});
    }

 private void modelarTabla(){
        modelo.addColumn("ID");
        modelo.addColumn("NOMBRE Y APELLIDO");
        modelo.addColumn("DNI");
        
        jTable1.setModel(modelo);
        jTable1.getColumnModel().getColumn(0).setPreferredWidth(38);
        jTable1.getColumnModel().getColumn(1).setPreferredWidth(155);
        jTable1.getColumnModel().getColumn(2).setPreferredWidth(75);
    }

 private void limpiarTabla(){
             int i = 0; 
        while (modelo.getRowCount() !=0)
        modelo.removeRow(i);
 }
 
 private void limpiarCampos(){
         jtfIdBombero.setText(null);
         jtfNombre.setText(null);
         jtfDni.setText(null);
         jtfCelular.setText(null); 
         jtfFijo2.setText(null);
         jtfCorreo2.setText(null);
         jcbEstado.setSelectedItem(null);
         jcbEspecialidad.setSelectedItem(null);
         jcbSexo.setSelectedItem(null);
         jdcFechaNac.setDate(null);
         jcbSangre.setSelectedItem(null);
         jcbTipo.setSelectedItem(null);
         jcbRango.setSelectedItem(null);
         jtfBuscarNombre.setText(null);
         jrbFijoNo.setSelected(true);
         jrbCorreoNo.setSelected(true);
         jrbFijoSi.setSelected(false);
         jrbCorreoSi.setSelected(false);
         jtfFijo2.setEnabled(false);
         jtfCorreo2.setEnabled(false);

        
       
 }
 
 private void validacion(){
        if (jtfNombre.getText().isEmpty())
            jlErrorNombre.setText("!");
        else 
            jlErrorNombre.setText("");
        
         if (jtfDni.getText().isEmpty())
            jlErrorDni.setText("!");
        else 
            jlErrorDni.setText("");
             
         if (jcbSexo.getSelectedItem()== null)
             jlErrorSexo.setText("!");
           else 
            jlErrorSexo.setText("");
        
         if (jdcFechaNac.getDate()==null)
             jlErrorFecha.setText("!");
           else 
            jlErrorFecha.setText("");
         
          if (jtfCelular.getText().isEmpty())
            jlErrorCelular.setText("!");
        else if (jtfCelular.getText().length()!=10)
             jlErrorCelular.setText("!");
          else
              jlErrorCelular.setText("");
          
           if (jcbSangre.getSelectedItem()== null)
             jlErrorSangre.setText("!");
           else 
            jlErrorSangre.setText("");
           
           if (jcbTipo.getSelectedItem()== null)
             jlErrorTipo.setText("!");
           else 
            jlErrorTipo.setText("");
           
            if (jcbRango.getSelectedItem()== null)
             jlErrorRango.setText("!");
           else 
            jlErrorRango.setText("");
            
             if (jcbEstado.getSelectedItem()== null)
             jlErrorEstado.setText("!");
              else 
            jlErrorEstado.setText("");
             
             if (jcbEspecialidad.getSelectedItem()== null)
             jlErrorEspecialidad.setText("!");
              else 
            jlErrorEspecialidad.setText("");
           
             if(jrbFijoSi.isSelected() && (jtfFijo2.getText().length() > 9 && jtfFijo2.getText().length() < 11))
                 jlErrorFijo.setText("");
             else if (jrbFijoNo.isSelected())
                 jlErrorFijo.setText("");
             else                 
                 jlErrorFijo.setText("!");
             
              if(jrbCorreoSi.isSelected() && jtfCorreo2.getText().length() > 6 && jtfCorreo2.getText().contains("@") && jtfCorreo2.getText().contains("."))
                 jlErrorCorreo.setText("");
              else if (jrbCorreoNo.isSelected())
                 jlErrorCorreo.setText("");
             else
                 jlErrorCorreo.setText("!");
           
        if (jlErrorNombre.getText().equals("") &&   jlErrorDni.getText().equals("") &&  jlErrorDni.getText().equals("") && jlErrorSexo.getText().equals("")
                && jlErrorFecha.getText().equals("") && jlErrorCelular.getText().equals("") && jlErrorFijo.getText().equals("") && jlErrorCorreo.getText().equals("")
                && jlErrorSangre.getText().equals("") && jlErrorTipo.getText().equals("") && jlErrorRango.getText().equals("") && jlErrorEstado.getText().equals("")
                &&  jlErrorEspecialidad.getText().equals(""))
            
             jbActualizar.setEnabled(true);
        
        else 
            jbActualizar.setEnabled(false);
    }
        
          private void disableCopy(JComponent component) {
        component.getInputMap().put(KeyStroke.getKeyStroke("control C"), "none");
    }

    private void disablePaste(JComponent component) {
        component.getInputMap().put(KeyStroke.getKeyStroke("control V"), "none");
    }

    private void disableCopyPaste(JComponent component) {
        disableCopy(component);
        disablePaste(component);

    }
 
    private void chequearModificacion() {

        try{
       
        if (jtfNombre.getText().equals(b.getNombreCompleto()) &&  jtfDni.getText().equals(String.valueOf(b.getDni())) 
                && jcbSexo.getSelectedItem().equals(b.getSexo())
                && jdcFechaNac.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate().equals(b.getFechaNacimiento())
                && jtfCelular.getText().equals(Long.toString(b.getCelular())) && jcbSangre.getSelectedItem().equals(b.getGrupoSanguineo()) 
                && jcbTipo.getSelectedItem().equals(b.getTipo()) && jcbRango.getSelectedItem().equals(b.getRango())
                && jcbEstado.getSelectedItem().equals(b.getEstado()) && jcbEspecialidad.getSelectedItem().equals(b.getEspecialidad())           
                && (jrbFijoSi.isSelected() && jtfFijo2.getText().equals(b.getFijo())) && (jrbCorreoSi.isSelected() && jtfCorreo2.getText().equals(b.getCorreo())))
             
                jbActualizar.setEnabled(false); 
        
        else  if (jtfNombre.getText().equals(b.getNombreCompleto()) &&  jtfDni.getText().equals(String.valueOf(b.getDni())) 
                && jcbSexo.getSelectedItem().equals(b.getSexo())
                && jdcFechaNac.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate().equals(b.getFechaNacimiento())
                && jtfCelular.getText().equals(Long.toString(b.getCelular())) && jcbSangre.getSelectedItem().equals(b.getGrupoSanguineo()) 
                && jcbTipo.getSelectedItem().equals(b.getTipo()) && jcbRango.getSelectedItem().equals(b.getRango())
                && jcbEstado.getSelectedItem().equals(b.getEstado()) && jcbEspecialidad.getSelectedItem().equals(b.getEspecialidad())           
                && (jrbFijoSi.isSelected() && jtfFijo2.getText().equals(b.getFijo())) && (jrbCorreoNo.isSelected() && (b.getCorreo()==null)))
            
                 jbActualizar.setEnabled(false); 
        
        else  if (jtfNombre.getText().equals(b.getNombreCompleto()) &&  jtfDni.getText().equals(String.valueOf(b.getDni())) 
                && jcbSexo.getSelectedItem().equals(b.getSexo())
                && jdcFechaNac.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate().equals(b.getFechaNacimiento())
                && jtfCelular.getText().equals(Long.toString(b.getCelular())) && jcbSangre.getSelectedItem().equals(b.getGrupoSanguineo()) 
                && jcbTipo.getSelectedItem().equals(b.getTipo()) && jcbRango.getSelectedItem().equals(b.getRango())
                && jcbEstado.getSelectedItem().equals(b.getEstado()) && jcbEspecialidad.getSelectedItem().equals(b.getEspecialidad())           
                && (jrbFijoNo.isSelected() && (b.getFijo()==null)) && (jrbCorreoNo.isSelected() &&  (b.getCorreo()==null)))
            
                 jbActualizar.setEnabled(false); 
            
         else  if (jtfNombre.getText().equals(b.getNombreCompleto()) &&  jtfDni.getText().equals(String.valueOf(b.getDni())) 
                && jcbSexo.getSelectedItem().equals(b.getSexo())
                && jdcFechaNac.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate().equals(b.getFechaNacimiento())
                && jtfCelular.getText().equals(Long.toString(b.getCelular())) && jcbSangre.getSelectedItem().equals(b.getGrupoSanguineo()) 
                && jcbTipo.getSelectedItem().equals(b.getTipo()) && jcbRango.getSelectedItem().equals(b.getRango())
                && jcbEstado.getSelectedItem().equals(b.getEstado()) && jcbEspecialidad.getSelectedItem().equals(b.getEspecialidad())           
                && (jrbFijoNo.isSelected() && (b.getFijo()==null)) && (jrbCorreoSi.isSelected() && jtfCorreo2.getText().equals(b.getCorreo())))
            
                 jbActualizar.setEnabled(false); 
               
         else  if (jlErrorNombre.getText().equals("") &&   jlErrorDni.getText().equals("") &&  jlErrorDni.getText().equals("") && jlErrorSexo.getText().equals("")
                && jlErrorFecha.getText().equals("") && jlErrorCelular.getText().equals("") && jlErrorFijo.getText().equals("") && jlErrorCorreo.getText().equals("")
                && jlErrorSangre.getText().equals("") && jlErrorTipo.getText().equals("") && jlErrorRango.getText().equals("") && jlErrorEstado.getText().equals("")
                &&  jlErrorEspecialidad.getText().equals("")) 
             
             
            
               jbActualizar.setEnabled(true); 
               
        }catch(NullPointerException nx){
                      JOptionPane.showMessageDialog(null, "Error de control !!");
                  }
    

        
    }
    
    
}
