
package Ignis66.vistas;

import Ignis66.acessoADatos.BomberoData;
import Ignis66.acessoADatos.BrigadaData;
import Ignis66.entidades.Bombero;
import Ignis66.entidades.Brigada;
import java.util.ArrayList;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.KeyStroke;
import javax.swing.table.DefaultTableModel;


public class AsignarBrigada extends javax.swing.JFrame {

    ArrayList<Brigada> lista = new ArrayList();
    
        
        DefaultTableModel modelo = new DefaultTableModel(){
            @Override
            public boolean isCellEditable(int f, int c){
                return false;
            }
            
        };
        
        
    /**
     * Creates new form AsignarBrigada
     */
    public AsignarBrigada() {
        initComponents();
        armarTabla();
        armarTabla2();
        armarTabla3();
        disableCopyPaste(b1);//deshabilita el copy paste en el textfield
        disableCopyPaste(b2);
        disableCopyPaste(b3);
        disableCopyPaste(b4);
        disableCopyPaste(b5);
        disableCopyPaste(txtB);
        disableCopyPaste(txtE);
    }

    private void disableCopy(JComponent component) {
        component.getInputMap().put(KeyStroke.getKeyStroke("control C"), "none");
    }

    private void disablePaste(JComponent component) {
        component.getInputMap().put(KeyStroke.getKeyStroke("control V"), "none");
    }

    private void disableCopyPaste(JComponent component) {
        disableCopy(component);
        disablePaste(component);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        b1 = new javax.swing.JTextField();
        b2 = new javax.swing.JTextField();
        b3 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        b4 = new javax.swing.JTextField();
        b5 = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabla2 = new javax.swing.JTable();
        limpCampos = new javax.swing.JButton();
        asignarBri = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtB = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtE = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        tabla3 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(java.awt.Color.red);

        jLabel1.setBackground(java.awt.Color.white);
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(java.awt.Color.white);
        jLabel1.setText("Asignaci√≥n de Brigadas");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(298, 298, 298)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabla);

        jLabel4.setText("Bombero 1: ");

        jLabel5.setText("Bombero 2: ");

        jLabel6.setText("Bombero 3: ");

        b1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                b1KeyTyped(evt);
            }
        });

        b2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                b2KeyTyped(evt);
            }
        });

        b3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                b3KeyTyped(evt);
            }
        });

        jLabel7.setText("Bombero 4: ");

        jLabel8.setText("Bombero 5: ");

        b4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                b4KeyTyped(evt);
            }
        });

        b5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                b5KeyTyped(evt);
            }
        });

        tabla2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabla2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabla2MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tabla2);

        limpCampos.setText("Limpiar Campos");
        limpCampos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limpCamposActionPerformed(evt);
            }
        });

        asignarBri.setText("Asignar Brigada");
        asignarBri.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                asignarBriActionPerformed(evt);
            }
        });

        jLabel2.setText("Brigada: ");

        txtB.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBKeyTyped(evt);
            }
        });

        jLabel3.setText("Especialidad: ");

        txtE.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtEKeyTyped(evt);
            }
        });

        tabla3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(tabla3);

        jButton1.setText("Modificar Brigada");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Salir");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGap(17, 17, 17)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(b1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(b2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel6))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(b4, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(b3, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(81, 81, 81)
                        .addComponent(jLabel2)
                        .addGap(27, 27, 27)
                        .addComponent(txtB, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(130, 130, 130)
                        .addComponent(jLabel3)
                        .addGap(27, 27, 27)
                        .addComponent(txtE, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(196, 196, 196)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 475, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(96, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(jLabel8)
                            .addGap(22, 22, 22)
                            .addComponent(b5, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(51, 51, 51))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 754, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(66, 66, 66)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(limpCampos, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(95, 95, 95)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(asignarBri, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE))
                        .addGap(109, 109, 109)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
            .addGroup(layout.createSequentialGroup()
                .addGap(196, 196, 196)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 470, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(b1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel8)
                    .addComponent(b5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(b2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(b4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(txtE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(asignarBri)
                    .addComponent(limpCampos)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void limpCamposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limpCamposActionPerformed
        limpCampos();
    }//GEN-LAST:event_limpCamposActionPerformed

    private void asignarBriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_asignarBriActionPerformed
        Bombero bombero = new Bombero();
        bombero.setNombreCompleto(b1.getText());
        Bombero bombero2 = new Bombero();
        bombero2.setNombreCompleto(b2.getText());
        Bombero bombero3 = new Bombero();
        bombero3.setNombreCompleto(b3.getText());
        Bombero bombero4 = new Bombero();
        bombero4.setNombreCompleto(b4.getText());
        Bombero bombero5 = new Bombero();
        bombero5.setNombreCompleto(b5.getText());
        Brigada brigada = new Brigada();
        brigada.setNombreBrigada(txtB.getText());
        brigada.setEspecialidad(txtE.getText());
        
        if(b1.getText().isEmpty() || b2.getText().isEmpty() || b3.getText().isEmpty() || b4.getText().isEmpty() || b5.getText().isEmpty() || txtB.getText().isEmpty() || txtE.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Para asignar una brigada se necesita que todos los campos esten completos");
        }else{
            lista.add(new Brigada(brigada.getNombreBrigada(), bombero, bombero2, bombero3, bombero4, bombero5, brigada.getEspecialidad(), true, false));
        
            modelo.addRow(new Object[]{brigada.getNombreBrigada(), bombero.getNombreCompleto(), bombero2.getNombreCompleto(), bombero3.getNombreCompleto(), bombero4.getNombreCompleto(), bombero5.getNombreCompleto(), brigada.getEspecialidad()});
        }
        
        limpCampos();
    }//GEN-LAST:event_asignarBriActionPerformed

    private void tablaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaMouseClicked
    
        
        
        if(b1.getText().isEmpty() && tabla.getSelectedRow() != -1 && evt.getClickCount() == 2){
            b1.setText(tabla.getValueAt(tabla.getSelectedRow(), 1).toString());
        }else if(b2.getText().isEmpty() && !b1.getText().isEmpty() && tabla.getSelectedRow() != -1 && evt.getClickCount() == 2){
            b2.setText(tabla.getValueAt(tabla.getSelectedRow(), 1).toString());
        }else if(b3.getText().isEmpty() && !b1.getText().isEmpty() && !b2.getText().isEmpty() && tabla.getSelectedRow() != -1 && evt.getClickCount() == 2){
            b3.setText(tabla.getValueAt(tabla.getSelectedRow(), 1).toString());
        }else if(b4.getText().isEmpty() && !b1.getText().isEmpty() && !b2.getText().isEmpty() && !b3.getText().isEmpty() && tabla.getSelectedRow() != -1 && evt.getClickCount() == 2){
            b4.setText(tabla.getValueAt(tabla.getSelectedRow(), 1).toString());
        }else if(b5.getText().isEmpty() && !b1.getText().isEmpty() && !b2.getText().isEmpty() && !b3.getText().isEmpty() && !b4.getText().isEmpty() && tabla.getSelectedRow() != -1 && evt.getClickCount() == 2){
            b5.setText(tabla.getValueAt(tabla.getSelectedRow(), 1).toString());
        }
        String bombero = b1.getText();
        String bombero2 = b2.getText();
        String bombero3 = b3.getText();
        String bombero4 = b4.getText();
        String bombero5 = b5.getText();
        
        try{
            if(!b1.getText().isEmpty() && !b2.getText().isEmpty() && !b3.getText().isEmpty() && !b4.getText().isEmpty() && !b5.getText().isEmpty() && evt.getClickCount() == 2){
                
            String id = JOptionPane.showInputDialog("Ingrese el id del bombero 1");
            int idB = Integer.parseInt(id);
            Bombero bom1 = new Bombero(idB, bombero);
            String id2 = JOptionPane.showInputDialog("Ingrese el id del bombero 2");
            int idB2 = Integer.parseInt(id2);
            Bombero bom2 = new Bombero(idB2, bombero2);
            String id3 = JOptionPane.showInputDialog("Ingrese el id del bombero 3");
            int idB3 = Integer.parseInt(id3);
            Bombero bom3 = new Bombero(idB3, bombero3);
            String id4 = JOptionPane.showInputDialog("Ingrese el id del bombero 4");
            int idB4 = Integer.parseInt(id4);
            Bombero bom4 = new Bombero(idB4, bombero4);
            String id5 = JOptionPane.showInputDialog("Ingrese el id del bombero 5");
            int idB5 = Integer.parseInt(id5);
            Bombero bom5 = new Bombero(idB5, bombero5);
            

            if(bom1.getIdBombero() == bom2.getIdBombero() && bom1.getIdBombero() == bom3.getIdBombero() && bom1.getIdBombero() == bom4.getIdBombero() && bom1.getIdBombero() == bom5.getIdBombero()){
                b2.setText("");
                b3.setText("");
                b4.setText("");
                b5.setText("");
            }else if(bom1.getIdBombero() == bom2.getIdBombero() && bom1.getIdBombero() == bom3.getIdBombero() && bom1.getIdBombero() == bom4.getIdBombero()){
                b2.setText("");
                b3.setText("");
                b4.setText("");
            }else if(bom1.getIdBombero() == bom2.getIdBombero() && bom1.getIdBombero() == bom3.getIdBombero()){
                b2.setText("");
                b3.setText("");
            }else if(bom1.getIdBombero() == bom2.getIdBombero()){
                b2.setText("");
            }else if(bom1.getIdBombero() == bom3.getIdBombero()){
                b3.setText("");
            }else if(bom1.getIdBombero() == bom4.getIdBombero()){
                b4.setText("");
            }else if(bom1.getIdBombero() == bom5.getIdBombero()){
                b5.setText("");
            }else if(bom1.getIdBombero() == bom3.getIdBombero() && bom1.getIdBombero() == bom4.getIdBombero() && bom1.getIdBombero() == bom5.getIdBombero()){
                b3.setText("");
                b4.setText("");
                b5.setText("");
            }else if(bom1.getIdBombero() == bom4.getIdBombero() && bom1.getIdBombero() == bom5.getIdBombero()){
                b4.setText("");
                b5.setText("");
            }else if(bom1.getIdBombero() == bom3.getIdBombero() && bom1.getIdBombero() == bom4.getIdBombero()){
                b3.setText("");
                b4.setText("");
            }else if(bom1.getIdBombero() == bom2.getIdBombero() && bom1.getIdBombero() == bom5.getIdBombero()){
                b2.setText("");
                b5.setText("");
            }else if(bom1.getIdBombero() == bom3.getIdBombero() && bom1.getIdBombero() == bom5.getIdBombero()){
                b3.setText("");
                b5.setText("");
            }else if(bom1.getIdBombero() == bom2.getIdBombero() && bom1.getIdBombero() == bom4.getIdBombero()){
                b2.setText("");
                b4.setText("");
            }else if(bom1.getIdBombero() == bom2.getIdBombero() && bom1.getIdBombero() == bom3.getIdBombero() && bom1.getIdBombero() == bom5.getIdBombero()){
                b2.setText("");
                b3.setText("");
                b5.setText("");
            }else if(bom2.getIdBombero() == bom3.getIdBombero() && bom2.getIdBombero() == bom4.getIdBombero() && bom2.getIdBombero() == bom5.getIdBombero()){
                b3.setText("");
                b4.setText("");
                b5.setText("");
            }else if(bom2.getIdBombero() == bom3.getIdBombero()){
                b3.setText("");
            }else if(bom2.getIdBombero() == bom4.getIdBombero()){
                b4.setText("");
            }else if(bom2.getIdBombero() == bom5.getIdBombero()){
                b5.setText("");
            }else if(bom2.getIdBombero() == bom3.getIdBombero() && bom2.getIdBombero() == bom5.getIdBombero()){
                b3.setText("");
                b5.setText("");
            }else if(bom2.getIdBombero() == bom4.getIdBombero() && bom2.getIdBombero() == bom5.getIdBombero()){
                b4.setText("");
                b5.setText("");
            }else if(bom2.getIdBombero() == bom3.getIdBombero() && bom2.getIdBombero() == bom4.getIdBombero()){
                b3.setText("");
                b4.setText("");
            }else if(bom3.getIdBombero() == bom4.getIdBombero()){
                b4.setText("");
            }else if(bom3.getIdBombero() == bom5.getIdBombero()){
                b5.setText("");
            }else if(bom3.getIdBombero() == bom4.getIdBombero() && bom3.getIdBombero() == bom5.getIdBombero()){
                b4.setText("");
                b5.setText("");
            }else if(bom4.getIdBombero() == bom5.getIdBombero()){
                b5.setText("");
            }
            
           } 
        }catch(NumberFormatException nf){
            JOptionPane.showMessageDialog(this, "Ingrese un n√∫mero");
        }
        
    }//GEN-LAST:event_tablaMouseClicked

    private void tabla2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabla2MouseClicked
        
        if(txtB.getText().isEmpty() && tabla2.getSelectedRow() != -1 && evt.getClickCount() == 2){
            txtB.setText(tabla2.getValueAt(tabla2.getSelectedRow(), 1).toString());
        }else if(txtE.getText().isEmpty() && tabla2.getSelectedRow() != -1 && evt.getClickCount() == 2){
            txtE.setText(tabla2.getValueAt(tabla2.getSelectedRow(), 2).toString());
        }
    }//GEN-LAST:event_tabla2MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       
        try{
        
        if(b1.getText().isEmpty() || b2.getText().isEmpty() || b3.getText().isEmpty() || b4.getText().isEmpty() || b5.getText().isEmpty() || txtB.getText().isEmpty() || txtE.getText().isEmpty() && tabla3.getSelectedRow() != -1){
            JOptionPane.showMessageDialog(this, "Para modificar una Brigada se necesitan todos los campos completos");
        }else{
            Bombero bombero = new Bombero();
            bombero.setNombreCompleto(b1.getText());
            Bombero bombero2 = new Bombero();
            bombero2.setNombreCompleto(b2.getText());
            Bombero bombero3 = new Bombero();
            bombero3.setNombreCompleto(b3.getText());
            Bombero bombero4 = new Bombero();
            bombero4.setNombreCompleto(b4.getText());
            Bombero bombero5 = new Bombero();
            bombero5.setNombreCompleto(b5.getText());
            Brigada brigada = new Brigada();
            brigada.setNombreBrigada(txtB.getText());
            brigada.setEspecialidad(txtE.getText());
            
            lista.set(tabla3.getSelectedRow(), new Brigada(brigada.getNombreBrigada(), bombero, bombero2, bombero3, bombero4, bombero5, brigada.getEspecialidad(), true, false));
            
            modelo.removeRow(tabla3.getSelectedRow());

            modelo.addRow(new Object[]{brigada.getNombreBrigada(), bombero.getNombreCompleto(), bombero2.getNombreCompleto(), bombero3.getNombreCompleto(), bombero4.getNombreCompleto(), bombero5.getNombreCompleto(), brigada.getEspecialidad()});
            
            
        }
        
        }catch(ArrayIndexOutOfBoundsException arr){
            JOptionPane.showMessageDialog(this, "Seleccione la brigada a modificar");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void b1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_b1KeyTyped
        char c = evt.getKeyChar();
        if ((c < 'a' || c > 'z') && (c < 'A' || c > 'Z') && (c != 32)&& (c!='\u00f1')&&(c!='\u00d1')) { 
            evt.consume();
        }
    }//GEN-LAST:event_b1KeyTyped

    private void b2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_b2KeyTyped
        char c = evt.getKeyChar();
        if ((c < 'a' || c > 'z') && (c < 'A' || c > 'Z') && (c != 32)&& (c!='\u00f1')&&(c!='\u00d1')) { 
            evt.consume();
        }
    }//GEN-LAST:event_b2KeyTyped

    private void b3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_b3KeyTyped
        char c = evt.getKeyChar();
        if ((c < 'a' || c > 'z') && (c < 'A' || c > 'Z') && (c != 32)&& (c!='\u00f1')&&(c!='\u00d1')) { 
            evt.consume();
        }
    }//GEN-LAST:event_b3KeyTyped

    private void b4KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_b4KeyTyped
        char c = evt.getKeyChar();
        if ((c < 'a' || c > 'z') && (c < 'A' || c > 'Z') && (c != 32)&& (c!='\u00f1')&&(c!='\u00d1')) { 
            evt.consume();
        }
    }//GEN-LAST:event_b4KeyTyped

    private void b5KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_b5KeyTyped
        char c = evt.getKeyChar();
        if ((c < 'a' || c > 'z') && (c < 'A' || c > 'Z') && (c != 32)&& (c!='\u00f1')&&(c!='\u00d1')) { 
            evt.consume();
        }
    }//GEN-LAST:event_b5KeyTyped

    private void txtBKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBKeyTyped
        char c = evt.getKeyChar();
        if ((c < 'a' || c > 'z') && (c < 'A' || c > 'Z') && (c != 32)&& (c!='\u00f1')&&(c!='\u00d1')) { 
            evt.consume();
        }
    }//GEN-LAST:event_txtBKeyTyped

    private void txtEKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEKeyTyped
        char c = evt.getKeyChar();
        if ((c < 'a' || c > 'z') && (c < 'A' || c > 'Z') && (c != 32)&& (c!='\u00f1')&&(c!='\u00d1')) { 
            evt.consume();
        }
    }//GEN-LAST:event_txtEKeyTyped

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AsignarBrigada.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AsignarBrigada.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AsignarBrigada.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AsignarBrigada.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AsignarBrigada().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton asignarBri;
    private javax.swing.JTextField b1;
    private javax.swing.JTextField b2;
    private javax.swing.JTextField b3;
    private javax.swing.JTextField b4;
    private javax.swing.JTextField b5;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton limpCampos;
    private javax.swing.JTable tabla;
    private javax.swing.JTable tabla2;
    private javax.swing.JTable tabla3;
    private javax.swing.JTextField txtB;
    private javax.swing.JTextField txtE;
    // End of variables declaration//GEN-END:variables


    public void armarTabla(){
        String [] nombreColumnas = {"ID", "Nombre y Apellido", "Dni"};
        
        DefaultTableModel modelo = new DefaultTableModel(null, nombreColumnas){
            @Override
            public boolean isCellEditable(int f, int c){
                return false;
            }
        };
        
        BomberoData bData = new BomberoData();
        for(Bombero bombero: bData.listarBomberos()){
            modelo.addRow(new Object[]{bombero.getIdBombero(), bombero.getNombreCompleto(), bombero.getDni()});
        }
        
        
        tabla.setModel(modelo);
    }
    
    public void armarTabla2(){
        String [] nombreColumnas = {"Id Brigada", "Brigada", "Especialidad", "Activa", "Libre"};
        DefaultTableModel modelo = new DefaultTableModel(null, nombreColumnas){
            @Override
            public boolean isCellEditable(int f, int c){
                return false;
            }
        };
        
        BrigadaData bData = new BrigadaData();
        String activa = "No";
        String libre = "Si";
        for(Brigada bri: bData.brigadasLibres()){
            if(!bri.isLibre()){
                modelo.addRow(new Object[]{bri.getIdBrigada(), bri.getNombreBrigada(), bri.getEspecialidad(), activa, libre});
            }
        }
        tabla2.setModel(modelo);
    }
    
    public void armarTabla3(){
        modelo.addColumn("Brigada");
        modelo.addColumn("Bombero 1");
        modelo.addColumn("Bombero 2");
        modelo.addColumn("Bombero 3");
        modelo.addColumn("Bombero 4");
        modelo.addColumn("Bombero 5");
        modelo.addColumn("Especialidad");
        tabla3.setModel(modelo);
    }
    
    public void limpiarFilas(){
        int filas = tabla3.getRowCount() - 1;
        for (int f = filas; f >= 0; f--) {
            modelo.removeRow(f);
        }
    }
    
    public void limpCampos(){
        b1.setText("");
        b2.setText("");
        b3.setText("");
        b4.setText("");
        b5.setText("");
        txtB.setText("");
        txtE.setText("");
    }
    
}
